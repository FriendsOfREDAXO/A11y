name: Update sa11y

on:
  schedule:
    - cron: '0 0 * * 1'  # Runs every Monday at midnight
  workflow_dispatch:  # Allows manual triggering

jobs:
  update-sa11y:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Get latest sa11y release tag and download URL
      id: get_latest_release
      uses: actions/github-script@v6
      with:
        script: |
          const latestRelease = await github.rest.repos.getLatestRelease({
            owner: 'ryersondmp',
            repo: 'sa11y'
          });

          // Find the ZIP asset from the release assets
          const zipAsset = latestRelease.data.assets.find(asset => asset.name.endsWith('.zip'));

          if (!zipAsset) {
            throw new Error('No ZIP asset found for the latest release.');
          }

          return { 
            tag_name: latestRelease.data.tag_name,
            download_url: zipAsset.browser_download_url
          };

    - name: Check if update is needed
      id: check_update
      run: |
        if [ ! -f .sa11y_version ]; then
          echo "No version file found, creating one."
          echo "none" > .sa11y_version
        fi
        CURRENT_VERSION=$(cat .sa11y_version)
        echo "Current version: $CURRENT_VERSION"
        if [ "$CURRENT_VERSION" = "${{ steps.get_latest_release.outputs.tag_name }}" ]; then
          echo "Already up-to-date."
          exit 0
        fi
        echo "New version found: ${{ steps.get_latest_release.outputs.tag_name }}"

    - name: Download and extract latest sa11y release
      run: |
        curl -L "${{ steps.get_latest_release.outputs.download_url }}" -o sa11y.zip
        unzip -o sa11y.zip -d sa11y
        rm -rf assets/vendor/sa11y
        mkdir -p assets/vendor/sa11y
        mv sa11y/sa11y-*/* assets/vendor/sa11y/

    - name: Save the new version
      run: echo "${{ steps.get_latest_release.outputs.tag_name }}" > .sa11y_version

    - name: Create a new branch and commit changes
      run: |
        BRANCH_NAME="update-sa11y-${{ steps.get_latest_release.outputs.tag_name }}"
        git checkout -b "$BRANCH_NAME"
        git add assets/vendor/sa11y .sa11y_version
        git commit -m "Update sa11y to version ${{ steps.get_latest_release.outputs.tag_name }}"
        git push origin "$BRANCH_NAME"

    - name: Create Pull Request
      env:
        BRANCH_NAME: ${{ steps.get_latest_release.outputs.tag_name }}
      run: |
        PR_URL=$(gh pr create --title "Update sa11y to version ${{ steps.get_latest_release.outputs.tag_name }}" --body "This PR updates sa11y to the latest version and replaces the content of the assets folder." --head "update-sa11y-${BRANCH_NAME}" --base main)
        echo "Pull request created: $PR_URL"
